{"version":3,"sources":["context/AccessTokenContext.jsx","pages/About.jsx","pages/Contact.jsx","hooks/useAnimal.jsx","styles/no-photos.png","components/Card.jsx","components/Animals.jsx","components/HeroPicture.jsx","components/Hero.jsx","components/MoreCard.jsx","pages/Main.jsx","components/Logo.jsx","components/Navbar.jsx","components/Details/ImageCarousel.jsx","components/Details/PetDetails.jsx","pages/Details.jsx","context/FetchOptionsContext.jsx","components/Selection/Field.jsx","components/Selection/Selector.jsx","components/Selection/Pagination.jsx","components/Selection/Result.jsx","components/Selection/SearchPage.jsx","pages/Pets.jsx","App.js","styles/theme.js","index.js"],"names":["AccessTokenContext","createContext","AccessTokenProvider","children","useState","token","setToken","getNewToken","axios","post","grant_type","client_id","client_secret","then","response","access_token","data","catch","error","console","log","useEffect","Provider","value","useAccessToken","context","useContext","undefined","Error","About","Contact","useAnimal","p","url","params","setParams","instance","create","baseURL","headers","fetcher","path","get","useSWR","revalidateIfStale","revalidateOnFocus","revalidateOnReconnect","isLoading","isError","Card","props","pet","photo_medium","photos","size","reduce","prev","cur","push","photoPicker","w","h","borderRadius","shadow","to","id","direction","src","alt","fallbackSrc","NoImg","boxSize","fit","borderTopRadius","pt","fontSize","isTruncated","px","textAlign","name","colorScheme","type","breeds","primary","_","require","Animal","page","limit","options","str","pet_list","animals","map","el","pick","spacing","as","FaCat","FaDog","sx","charAt","toUpperCase","slice","justify","minChildWidth","base","justifyItems","alignItems","md","spacingX","spacingY","HeroPicture","data-name","xmlns","viewBox","xmlnsXlink","d","transform","fill","Hero","sm","align","my","flexDirection","mr","mb","width","height","MoreCard","navigate","useNavigate","onClick","Main","Logo","dataName","Navbar","isMobile","setMobile","useMediaQuery","mediaQuery","linkList","link","MobileNav","IconButton","aria-label","icon","variant","fontWeight","item","index","DesktopNav","color","py","ImageCarousel","length","photo","PetDetails","useParams","animal","details","fields","Object","keys","mixed","secondary","field","Details","maxW","FetchOptionsContext","FetchOptionsProvider","setOptions","useFetchOptions","Field","register","rest","htmlFor","opt","toLowerCase","selected","types","Selector","useForm","control","handleSubmit","useWatch","defaultValue","loading_breeds","marginBottom","onSubmit","columns","isDisabled","MyButton","offset","text","Pagination","totalPages","currentPage","setPage","mt","Result","petList","pagination","current_page","total_pages","SearchPage","Pets","App","element","theme","extendTheme","fonts","body","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c1c5d11.chunk.js","sourcesContent":["import { createContext, useContext, useState, useEffect} from \"react\";\r\nimport axios from 'axios';\r\n\r\n\r\nconst AccessTokenContext = createContext();\r\n\r\nfunction AccessTokenProvider({children}){\r\n  const [token, setToken] = useState(\"\");\r\n\r\n  function getNewToken(){\r\n    axios.post(\"https://api.petfinder.com/v2/oauth2/token\",{\r\n      grant_type: \"client_credentials\",\r\n      client_id: \"W6V1X5rdeNEBWUENbqo9W9bb5akeXENm7kdQ7DVUUTXny5BU9N\",\r\n      client_secret: \"nolMbHHfoJ7Esp8h8IiXm3NIOisJmn6uzikrbVyK\"\r\n    })\r\n    .then(response => {\r\n      const { access_token } = response.data;\r\n      setToken(access_token); \r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n      getNewToken();\r\n  }, []);\r\n\r\n  // Make a loading page\r\n  if(token === \"\"){\r\n    return <h1>Loading ...</h1>\r\n  }\r\n\r\n  return(\r\n    <AccessTokenContext.Provider value={{token, setToken, getNewToken}}>\r\n      {children}\r\n    </AccessTokenContext.Provider>\r\n  )\r\n};\r\n\r\nfunction useAccessToken(){\r\n  const context = useContext(AccessTokenContext);\r\n\r\n  if(context === undefined) {\r\n    throw new Error('useAccessToken must be used within a Provider!')\r\n  }\r\n\r\n  return context;\r\n}\r\n\r\nexport { AccessTokenProvider, useAccessToken };","import { Heading } from \"@chakra-ui/layout\"\r\n\r\nconst About = () => {\r\n  return (\r\n    <Heading>About us</Heading>\r\n  )\r\n};\r\n\r\nexport default About;","import { Heading } from \"@chakra-ui/layout\"\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <Heading>Contact us</Heading>\r\n  )\r\n};\r\n\r\nexport default Contact;","import axios from 'axios';\r\nimport { useState } from 'react';\r\nimport useSWR from 'swr';\r\nimport { useAccessToken } from '../context/AccessTokenContext';\r\n\r\nfunction useAnimal(p , url = \"/\"){\r\n  const { token } = useAccessToken();\r\n  const [ params, setParams ] = useState(p);\r\n\r\n  const instance = axios.create({\r\n    baseURL: 'https://api.petfinder.com/v2',\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`\r\n    },\r\n  });\r\n\r\n  const fetcher = (path, params) => instance.get(path, {params: params})\r\n  .then((response) => {\r\n    return response.data;\r\n  })\r\n  .catch((error) =>{\r\n    return error.response;\r\n  })\r\n\r\n  const { data, error } = useSWR([url, params], fetcher, {\r\n    revalidateIfStale: false,\r\n    revalidateOnFocus: false,\r\n    revalidateOnReconnect: false\r\n  });\r\n\r\n  return {\r\n    data,\r\n    setParams,\r\n    isLoading: !error && !data,\r\n    isError: error\r\n  }\r\n};\r\n\r\nexport { useAnimal };\r\n","export default __webpack_public_path__ + \"static/media/no-photos.54fabf7f.png\";","import { Image } from \"@chakra-ui/image\";\r\nimport { Box, Flex, Text, VStack } from \"@chakra-ui/layout\";\r\nimport { Tag } from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport NoImg from \"../styles/no-photos.png\";\r\n\r\nfunction photoPicker(photos, size){\r\n  const res = photos.reduce((prev, cur) => {\r\n    prev.push(cur[size]);\r\n    return prev;\r\n  },[]);\r\n\r\n  return res;\r\n}\r\n\r\nconst Card = (props) => {\r\n  const pet = props.pet;\r\n  const photos = pet.photos;\r\n\r\n  const photo_medium = photoPicker(photos, \"medium\");\r\n\r\n  return (\r\n    <Box w={[\"200px\",\"250px\"]} h={[\"330px\",\"400px\"]} borderRadius=\"20px\" shadow=\"lg\">\r\n      <Link to={`/pets/${pet.id}`}>\r\n        <Flex direction=\"column\" h=\"full\">\r\n          \r\n          <Box h={[\"200px\",\"250px\"]}>\r\n            <Image src={photo_medium[0]} alt=\"Card image\" fallbackSrc={NoImg} boxSize={[\"200px\",\"250px\"]} fit=\"fill\" borderTopRadius=\"20px\"/>\r\n          </Box>\r\n          \r\n          <VStack w=\"full\" h=\"full\" pt={[4,6]}>\r\n            <Text fontSize=\"20px\" isTruncated w=\"full\" px={4} textAlign=\"center\">\r\n              {pet.name}\r\n            </Text>\r\n            <Tag colorScheme=\"orange\">\r\n              {pet.type}\r\n            </Tag>\r\n            <Tag colorScheme=\"pink\">\r\n              {pet.breeds.primary}\r\n            </Tag>\r\n          \r\n          </VStack>\r\n        </Flex>\r\n      </Link>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Card;","import Icon from '@chakra-ui/icon';\r\nimport { SimpleGrid, Flex, VStack, Box, HStack, Text } from '@chakra-ui/layout';\r\nimport { useState } from 'react';\r\nimport { useAnimal } from '../hooks/useAnimal';\r\nimport Card from './Card';\r\nimport { FaCat, FaDog } from \"react-icons/fa\";\r\nimport { Spinner } from '@chakra-ui/react';\r\n\r\nconst _ = require('lodash');\r\n\r\nfunction upper(str){\r\n  return str.charAt(0).toUpperCase() + str.slice(1); \r\n}\r\n\r\nconst Animal = (props) => {\r\n  const [options, setOptions] = useState({type: props.type, page: 5, limit: 4});\r\n  const { data, isLoading } = useAnimal(options, \"/animals\");\r\n\r\n  if(isLoading){\r\n    return (\r\n      <Spinner size=\"xl\"/>\r\n    )\r\n  };\r\n\r\n  const pet_list = data.animals.map(el => {\r\n    let pet = _.pick(el, ['id', 'type', 'breeds', 'age', 'gender', 'size', 'description','photos', 'contact', 'name', 'primary_photo_cropped']);\r\n\r\n    return pet;\r\n  });\r\n\r\n  return (\r\n    <VStack spacing={8}>\r\n      <Box>\r\n        <HStack spacing={8}>\r\n          <Icon as={props.type === \"cat\" ? FaCat : FaDog} w={16} h={16} sx={{\"color\":\"#0F2C67\"}}/>\r\n          <Text fontSize=\"3rem\" sx={{\r\n            \"font-family\": \"'Pacifico', cursive\",\r\n            \"color\" : \"#0F2C67\"\r\n          }}>\r\n            {upper(props.type)}\r\n          </Text>\r\n        </HStack>\r\n      </Box>\r\n      <Flex justify=\"center\" w=\"full\">\r\n        <SimpleGrid\r\n          minChildWidth=\"250px\" \r\n          //columns={{base: 1,sm: 2, md: 4}}\r\n          w={{base: \"full\", \"md\": \"1500px\"}}\r\n          justifyItems=\"center\"\r\n          alignItems=\"center\"\r\n          px={{base: 9, md: 28}}\r\n          spacingX={{md: \"28px\"}}\r\n          spacingY={8}\r\n        >\r\n          {\r\n            pet_list.map(pet => (\r\n              <Card key={pet.id} pet={pet}/>\r\n            ))\r\n          }\r\n        </SimpleGrid>\r\n      </Flex>\r\n    </VStack>\r\n  )\r\n};\r\n\r\nexport default Animal;","const HeroPicture = (props) => {\r\n  return (\r\n    <svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" {...props} viewBox=\"0 0 392.91037 539.67757\" xmlnsXlink=\"http://www.w3.org/1999/xlink\"><path d=\"M784.45844,266.35767c-1.38965,5.48828-6.082,9.72266-11.38184,11.71387-5.30078,1.99121-11.14453,2.01367-16.76855,1.35791-7.04883-.82178-14.09961-2.727-20.03223-6.623-5.93164-3.896-10.65625-9.96142-11.8916-16.95019-1.23437-6.98926,1.48047-14.79493,7.41309-18.69043l-3.708-1.25537c-9.041-3.811-20.10547-.25733-26.69727,7.01074-6.59179,7.26855-9.14648,17.52441-8.76757,27.3291s3.41894,19.30273,6.83886,28.5c2.2461,6.04394,4.999,12.42871,10.49121,15.8081,4.87012,2.99707,10.96094,3.02735,16.66309,2.6001,14.38477-1.07715,29.01367-4.68847,40.5332-13.37012C778.67035,295.10718,786.517,280.63453,784.45844,266.35767Z\" transform=\"translate(-403.54481 -180.16121)\" fill=\"#f5a9c4\"/><path d=\"M548.40411,417.7233q-18.52441,3.74561-37.04785,7.4917-15.9668,77.77076-31.93555,155.541C545.16485,625.35611,572.98126,446.95816,548.40411,417.7233Z\" transform=\"translate(-403.54481 -180.16121)\" fill=\"#f5a9c4\"/><path d=\"M499.8564,181.71241c-4.34057,3.32542-6.87178,8.44266-10.0408,12.80355a215.64934,215.64934,0,0,0-13.19481,22.40189A315.55986,315.55986,0,0,0,454.928,272.49654c-8.2704,5.52269-16.562,11.59526-21.07673,20.7236a69.48125,69.48125,0,0,0-5.54051,45.47582,77.736,77.736,0,0,0,14.781,34.81056c5.2561,7.2828,12.12789,13.1333,19.53341,18.13784-1.91956-2.03587-3.76677-4.13993-5.59839-6.25512-7.21351-7.82655-13.51816-21.22895-15.65589-27.27759-4.325-13.84625-4.78915-22.3582-5.81989-31.9212-.7085-13.02116.86266-21.293,4.1775-31.93151,2.32751-6.93745,8.73346-14.47181,15.03588-21.19973-.08181.29108-.17308.57938-.25378.871.246-.46917.502-.93306.74968-1.40168.21427-.22763.42966-.46278.64337-.68818-.143.09517-.28662.19368-.43021.28913A811.893,811.893,0,0,1,501.752,195.4134c-.04007,24.162-2.51619,50.09913-2.19172,74.73113,2.85068-15.57268,5.40026-31.19657,7.83908-46.83854,1.64573-11.26913,3.8163-22.60587,3.53023-34.03445C511.37152,182.7259,505.94122,177.41776,499.8564,181.71241Z\" transform=\"translate(-403.54481 -180.16121)\"/><path d=\"M628.149,235.70937c-1.24835-10.48327-1.21-21.448-4.881-31.44368-1.59342-4.81031-6.94915-8.23868-11.66428-5.28115-2.89687,1.84387-4.43018,5.026-5.97851,7.97348-2.42825,4.65419-4.71848,9.37851-6.98031,14.11507-6.2234,12.98443-12.82192,25.90095-17.34893,39.5627.04341-.42632.08793-.85375.13023-1.28063.58884-5.99521.58772-12.21443-1.68747-17.88489-8.84644-25.38-33.40554-24.553-53.79159-13.52957-8.17635,4.8885-14.71921,12.01685-21.27876,18.82074,10.63186-6.79248,21.03554-14.70335,33.73557-16.9983,17.31943-4.62609,30.53538-1.4451,38.69726,15.202,2.61637,4.8462,3.37439,10.42844,4.15023,15.81423a119.33648,119.33648,0,0,0-3.43672,12.4543c10.2445-20.00787,24.73163-37.36793,35.50541-57.06663.41575-.70182.81814-1.4117,1.22554-2.11881,3.43895,18.62511,6.73487,37.27722,11.01032,55.73925,1.57338,7.18235,3.07553,14.38055,4.69844,21.55176.01057-.67566.02505-1.35187.03673-2.02809A454.9584,454.9584,0,0,0,628.149,235.70937Z\" transform=\"translate(-403.54481 -180.16121)\"/><path d=\"M632.15228,285.77287c3.597,8.75823,5.4893,16.66715,5.48262,25.06195.09573,7.62091.212,11.0504-1.47709,17.38566-2.34032,8.8598-7.93481,16.37746-11.65649,21.05392.06568-.08349.31724-.41019.69792-.905-6.2579,7.65708-13.29832,14.17656-20.42,20.5135-6.21671,5.30981-14.75649,11.868-19.63748,15.70709q-3.54387,2.6773-7.30812,5.04406c8.98057-2.49893,17.29327-6.86455,25.55533-11.09326,20.44-11.01923,40.99249-29.30484,41.33867-54.2154C644.69425,310.55237,640.65644,296.71586,632.15228,285.77287Z\" transform=\"translate(-403.54481 -180.16121)\"/><path d=\"M492.82489,281.53081c-12.01936.298-11.98764,17.9066.00055,18.23719C504.84536,299.47,504.81364,281.86113,492.82489,281.53081Z\" transform=\"translate(-403.54481 -180.16121)\"/><path d=\"M579.20777,287.10388c-12.01936.29775-11.98819,17.90659,0,18.23719C591.22769,305.04331,591.19652,287.43447,579.20777,287.10388Z\" transform=\"translate(-403.54481 -180.16121)\"/><path d=\"M534.36058,324.88894a61.3899,61.3899,0,0,0-10.45544-.723c3.58421.98955,7.17956,1.983,10.68251,3.23024.00891-.07819.11187.00946.23153.10881-2.54179,2.97952-6.23675,6.48108-9.19039,9.58916a26.459,26.459,0,0,1-3.26642,2.92859c-1.61457-5.90755-2.2752-12.61459-3.7612-18.72139-.26381,5.72333-.39738,11.46336-.09072,17.18753-.03951,5.52047,2.9503,7.48455,7.30979,3.6087a72.75622,72.75622,0,0,0,10.67751-12.19133C538.7607,327.26209,537.68655,325.27992,534.36058,324.88894Z\" transform=\"translate(-403.54481 -180.16121)\"/><path d=\"M530.256,356.64485a26.06148,26.06148,0,0,1-12.7106-1.51995c-4.56821-1.84693-9.68128-6.19974-14.27063-9.4414,3.74339,4.53593,7.60811,9.45643,13.11411,11.89581a19.86091,19.86091,0,0,0,16.287-.78363,17.28825,17.28825,0,0,0,2.15386-1.3413A21.94076,21.94076,0,0,1,530.256,356.64485Z\" transform=\"translate(-403.54481 -180.16121)\"/><path d=\"M784.34245,464.18585c-5.49932-31.727-17.54762-64.73457-43.42853-85.39667a94.728,94.728,0,0,0-13.65563-9.21432c-3.09668-1.84553-6.569-3.80656-10.2818-2.9297a7.85327,7.85327,0,0,0-5.86776,8.03665c.03618,3.00428,1.88283,5.60618,3.42894,8.05585,16.43673,23.06781,26.384,36.33664,31.88725,58.33976,3.80127,13.59914,1.51328,26.68012-5.87388,40.00154-5.86163,10.39478-10.51554,17.158-19.68423,24.79313-2.52286,2.31917-10.96747,6.30716-15.25406,9.48676a29.45616,29.45616,0,0,0-4.276,4.41515,44.09369,44.09369,0,0,0-5.47928-10.05806,74.88063,74.88063,0,0,0-40.919-27.88062c-14.63962-3.81129-25.941-1.20438-35.68185-7.691-4.19308-3.71612-6.19223-7.37547-9.45252-14.38973-4.50476-9.37349-9.01953-22.35013-12.51915-35.02455-2.02809-6.33638-3.88809-12.99055-7.81514-18.4498-2.9887-3.759-7.58919-5.59282-11.72773-7.77006,3.41947,2.495,7.046,4.52869,9.5605,7.9771,3.03879,4.76077,3.84468,10.58456,5.009,16.01988,2.14718,13.56046,4.60716,27.10923,9.14085,40.10868,2.047,6.10374,4.32889,12.27148,8.53867,17.24931,9.94675,12.38,27.36469,10.6391,41.21289,14.87838a65.67676,65.67676,0,0,1,34.81473,25.44625c5.94846,9.46866,9.85548,27.75316,12.74734,43.61108,3.5831,19.89684,2.08151,49.343-2.75718,71.78668-.2716,1.19882-.56991,2.39207-.88047,3.58087q.2421-.5418.48532-1.083a198.977,198.977,0,0,0,12.62378-45.70262c2.88295-19.88348,1.22219-40.23391-3.02766-59.80071a92.64615,92.64615,0,0,0-3.57642-12.09,28.92567,28.92567,0,0,1,5.14813-3.98549c5.45535-2.83009,11.58079-4.23121,16.84135-7.48956,12.838-7.84242,22.98961-19.71624,30.0317-32.92189,8.8175-15.23013,7.60087-33.74671,2.396-49.987a110.61752,110.61752,0,0,0-8.26261-20.23244c13.01837,18.49376,20.89362,43.77137,25.045,66.44931,1.471,9.73248,3.08943,24.63034,1.00959,33.94957-4.14522,19.98784-13.16086,33.51212-29.50019,47.71039-6.618,5.64486-19.53286,11.08852-30.71961,11.69044a55.80629,55.80629,0,0,0,33.58586-7.976c18.79709-12.00016,33.11335-31.068,37.66207-53.05916C787.46806,491.29119,786.20969,477.551,784.34245,464.18585Z\" transform=\"translate(-403.54481 -180.16121)\"/><path d=\"M570.86692,496.40259A388.81589,388.81589,0,0,0,564.6374,577.053C570.80013,550.6461,572.477,523.43057,570.86692,496.40259Z\" transform=\"translate(-403.54481 -180.16121)\"/><path d=\"M695.65543,643.73714C681.27461,629.294,663.73756,618.277,645.6551,609.061c-10.54171-4.83313-21.61548-8.31271-32.76439-11.47449a60.154,60.154,0,0,0-8.46965-8.07089,32.56,32.56,0,0,1-5.25945-5.98686,13.58357,13.58357,0,0,1-2.62415-6.12572c-2.293-10.05639.73187-26.48951,7.3148-33.48457,16.95322-17.85762,19.13213.19313,17.45745-33.169-1.39417,6.01664-1.6179,12.491-3.99717,18.20436-.24155.39682-.8443.56824-1.78487.82286-8.68783,1.40725-17.54317,8.50054-21.16078,14.15125a43.50176,43.50176,0,0,0-3.7868,38.83973c2.62193,5.142,7.14283,8.93911,12.0099,11.95146-21.50417-6.48943-44.04909-7.73221-66.17827-4.93413,1.07916-15.73131,2.35812-31.43895,3.941-47.12879,1.068-17.1764,1.471-34.39064,1.77987-51.59431-8.69339,32.12769-13.177,65.959-7.31258,98.92012a192.89582,192.89582,0,0,0-23.717,4.751,153.56305,153.56305,0,0,0-19.45159,6.30688,263.661,263.661,0,0,0,3.882-59.95822c-.85877-16.09751-2.829-32.18084-7.91087-47.54008,1.99024,18.789.723,37.65344.99734,56.49728-.08905,17.20088,1.28453,34.35585,1.67913,51.54032a155.10209,155.10209,0,0,0-38.3394,22.41191q-3.23247,2.719-6.38034,5.54162a137.32254,137.32254,0,0,0,3.00094-22.41136c.7302-16.4167-1.53164-32.7232-3.04658-49.0297-1.6808-24.14224-.83706-48.4008-3.87251-72.46233-1.91232-24.57079-3.86249-45.79779,4.92774-68.09728.63447-1.57505,3.98048-7.46173,6.55176-9.38629a96.42693,96.42693,0,0,1,9.87329-6.98087,2.39218,2.39218,0,0,0,.46416.73242c4.6951,3.49962,11.31922.35676,15.824-2.08429,3.45843-.19369,3.9649,7.06936,9.329,8.74347,3.37273,1.33852,7.27084-.04063,10.22169-.34,2.66479.14748,5.31733.70682,7.97432.09962,2.57351-.26492,4.92106-1.41587,7.42556-1.97577,1.09418-.09573,9.752-.89494,14.07416-2.65087a17.05229,17.05229,0,0,1,8.57762-.57214,27.72946,27.72946,0,0,0,11.68877-.23542,14.21825,14.21825,0,0,1,6.24565-.82537c11.28248,1.47709,17.84983,4.82867,25.36-9.78869,1.02184-2.17223-.266.0718-1.04743.84819a24.24537,24.24537,0,0,1-7.54577,6.00634c-3.29258,1.91789-8.98391-.66341-12.99222-1.91566-6.15772-2.2969-10.08144-.58271-15.01585-.709-3.46845-.0846-6.97363-1.63627-10.71591-1.66132-3.85136-.07513-7.55468,1.09975-11.27024,1.94349-3.06439.76137-4.369.482-9.24771,1.32349-2.785.60163-5.334,2.00861-8.18025,2.38762-2.18169.06456-7.21851-.42187-10.17938.99679a7.53875,7.53875,0,0,1-3.34935.37066c-1.03408-.15917-2.63139-2.95753-4.10738-4.33055-2.59688-2.8106-7.07492-4.48917-10.32075-1.74647-2.95419,2.09988-6.14659,5.2639-11.1567,4.30384-.75246-3.16179-.3818-6.5757-.80589-9.81707-.44413,2.74715-.94169,5.486-1.38471,8.23256a5.40334,5.40334,0,0,0,.06679,2.41712c-4.18307,1.76706-8.48079,3.36159-12.2776,5.88056a32.91432,32.91432,0,0,0-8.95609,10.15545c-12.40115,22.11193-12.2353,48.11195-11.69433,72.74841,1.30457,30.1252,1.112,60.53091,8.51752,89.96932,4.00218,17.68759,5.83214,33.63706,5.07244,51.66722a331.80293,331.80293,0,0,0-40.06305,44.02711c27.29234-26.26021,57.34408-51.02078,89.70886-60.9923,28.22791-8.89569,61.26-12.20719,84.24794-8.61491,16.1963,2.81811,32.01972,7.61117,47.6411,12.66969,15.95142,5.14591,27.0597,11.33925,44.235,21.675,24.573,14.96771,52.26941,45.73323,75.53229,75.64694q1.5987,2.04452,3.19852,4.08846C734.01041,692.36445,717.29707,665.92531,695.65543,643.73714Z\" transform=\"translate(-403.54481 -180.16121)\"/><path d=\"M789.63084,240.65337a54.09289,54.09289,0,0,0-17.96059-18.62789c-7.85744-5.49807-17.73462-8.20543-27.097-5.28991-1.72254.23973-12.93267,4.63109-8.53589,3.49266,6.61188-1.26,13.79811-2.255,20.50682.38792,13.71352,6.63107,23.30129,20.58919,26.28387,36.0596a22.62773,22.62773,0,0,1-3.10669,15.32335,36.98365,36.98365,0,0,1-31.69914,17.36145c-12.65662-.57241-24.95426-4.11294-34.104-14.73006-3.45064-4.53035-8.803-16.57364-6.78218-24.04651,3.11615-14.05579,16.47959-20.69313,30.4981-19.37952-14.87616-4.919-31.5806,1.13871-37.78507,15.99316-4.30829,10.13264-1.79322,22.03429,2.80448,31.64405,14.27229,26.246,54.49953,35.31146,77.52865,15.36175C797.42539,280.65631,801.60734,259.24342,789.63084,240.65337Z\" transform=\"translate(-403.54481 -180.16121)\"/></svg>\r\n  )\r\n};\r\n\r\nexport default HeroPicture;","import { Flex, Text } from \"@chakra-ui/layout\"\r\nimport { VStack } from \"@chakra-ui/react\";\r\nimport Icon from \"@chakra-ui/icon\";\r\nimport HeroPicture from \"./HeroPicture\";\r\n\r\nconst Hero = () => {\r\n  return (\r\n    <Flex \r\n      w=\"100%\" \r\n      h={{base: \"xl\",sm:\"lg\"}} \r\n      align=\"center\" \r\n      justify=\"center\"\r\n      my={4} \r\n      px={[0,\"3rem\",\"8rem\"]} \r\n      flexDirection={{base: 'column', sm: 'row'}}\r\n    >\r\n      <VStack \r\n        w={{base:\"md\",sm:\"xl\"}} \r\n        p={[4,0]} \r\n        spacing={4} \r\n        mr={[0,10,20]} \r\n        mb={[20,0]}\r\n      >\r\n        <Text \r\n          w=\"100%\" \r\n          fontSize={[\"2.5rem\",\"3rem\",\"3.5rem\"]} \r\n          sx={{\r\n            \"font-family\":\"'Fredoka One', cursive;\",\r\n            \"color\": \"#F6A9A9\"\r\n            }}\r\n          textAlign=\"center\"  \r\n        >\r\n          Want a cute pet?\r\n        </Text>\r\n        <Text fontSize={{base:\"1.25rem\",md:\"1.5rem\"}} textAlign=\"center\">\r\n          Here is the place you can find and adopt them! Many beautiful cats and dogs are waiting for new owners. Let pick one for your own 🐶. \r\n        </Text>\r\n      </VStack>\r\n      <Icon as={HeroPicture} width={[\"100\",\"150\",\"250\"]} height={[\"200\",\"250\",\"350\"]}/>\r\n    </Flex>\r\n  )\r\n};\r\n\r\nexport default Hero;","import { Button } from \"@chakra-ui/button\";\r\nimport { Box } from \"@chakra-ui/layout\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nconst MoreCard = () => {\r\n  let navigate = useNavigate();\r\n\r\n  return (\r\n  <Box>\r\n    <Button colorScheme=\"teal\" size=\"lg\"\r\n      onClick={() => navigate(\"/pets\")}\r\n    >\r\n      Click here to find more pets!\r\n    </Button>\r\n  </Box>\r\n  )\r\n};\r\n\r\nexport default MoreCard;","import { VStack } from \"@chakra-ui/layout\";\r\nimport Animal from \"../components/Animals\";\r\nimport Hero from \"../components/Hero\";\r\nimport MoreCard from \"../components/MoreCard\";\r\n\r\nconst Main = () => {\r\n  return(\r\n    <>\r\n      <Hero />\r\n      <VStack spacing={20} mb={36}>\r\n        <Animal type=\"cat\"/>\r\n        <Animal type=\"dog\"/>\r\n        <MoreCard />\r\n      </VStack>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Main;","const Logo = (props) => (\r\n  <svg id=\"logo\" dataName=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" {...props} viewBox=\"0 0 363.30671 330.72454\" xmlnsXlink=\"http://www.w3.org/1999/xlink\"><path d=\"M651.02832,376.39971c-10.91338-5.56255-23.81828-7.08322-35.07608-1.59315-7.407,3.25336-14.81716,10.05789-19.37352,18.068a40.47938,40.47938,0,0,0-5.76568,4.81057c-9.92111,12.53193-10.83946,28.86218,1.3328,40.26034,10.40271,10.1231,26.3045,11.11333,39.83187,8.12688a48.581,48.581,0,0,0,30.51931-26.4767C669.40158,405.11681,667.11521,383.56954,651.02832,376.39971ZM633.49213,390.0569c1.22242.24541,2.43052.56678,3.6294.90351,6.42767,2.32794,2.78352.4598,7.90809,3.59941.19658.18735.37226.393.557.59217.23834.38454.53483.88446.82846,1.45606l.00778.01689c.222.62084.4255,1.24823.59176,1.88616a13.23088,13.23088,0,0,1,.50658,4.89176,15.41113,15.41113,0,0,0-1.28488-4.65383c-4.256-7.217-13.71718-5.01645-20.34368-2.95716-1.188.38372-2.35721.82508-3.51432,1.29225a40.026,40.026,0,0,1,5.19378-.3782c4.6186.12,11.30816-.411,13.38957,4.14428a9.25294,9.25294,0,0,1-3.75595,8.804c-5.076,3.92927-13.28616,6.745-18.27825,6.61329-5.34674-.14845-8.28793-1.469-10.11993-4.75416-.07392-.258-.15706-.56678-.23282-.892-.01761-.37513-.03276-.89717-.0129-1.44388.08907-.47955.15972-.96289.29076-1.43272,1.985-6.49422,10.05646-14.84614,16.66494-16.84481q-1.11676.47069-2.23354.94221C631.03273,389.49422,627.54912,390.10891,633.49213,390.0569Zm-10.56652,40.19021c-9.54681,1.35849-14.26943,2.10157-21.88657-2.34923-5.32441-3.43631-8.57951-7.57-8.40321-14.552a21.35334,21.35334,0,0,0,1.90777,5.23043c6.54868,11.47576,22.19309,13.60088,33.4519,8.25414,5.3492-2.20477,11.37369-6.07,15.31658-10.99A31.63,31.63,0,0,1,622.92561,430.24711Z\" transform=\"translate(-418.34664 -284.63773)\" fill=\"#f5a9c4\"/><path d=\"M722.92341,431.2917a1.03552,1.03552,0,0,0-1.18148-.89983c-2.47024,1.45217-4.69191,4.44824-7.2332,6.13548a92.6978,92.6978,0,0,1-14.8442,8.48952c-10.49526,4.48407-31.00357,9.66649-45.26972,14.62868-25.08392,9.791-51.10011,16.67958-76.91605,24.20856-28.56875,8.75981-54.98075,16.63146-83.8546,14.4833,29.81391,9.21469,61.66233,6.53313,91.84194.53382,24.254-4.23611,48.21543-10.72378,70.1882-22.03788,19.52791-10.01971,41.42532-16.97536,57.48334-32.51431a54.3787,54.3787,0,0,0,9.28615-11.84761c.00532-.00573.00348-.01024.0086-.01587.02744-.03266.05856-.06194.086-.0947A1.31015,1.31015,0,0,0,722.92341,431.2917Z\" transform=\"translate(-418.34664 -284.63773)\" fill=\"#f5a9c4\"/><path d=\"M779.60409,390.75043c-6.81385-15.69928-27.15488-16.32851-41.69746-13.34145q-3.50848.69507-6.98278,1.55578c-14.26369-22.23107-35.69691-38.9257-59.54755-49.91413-16.40222-8.04938-34.61516-11.66189-52.73165-13.0855-15.49656-1.09158-31.47616-.1506-46.15634,5.25542-8.48778,2.9717-16.8656,6.48541-24.13976,11.856-2.028,1.41583-4.0295,2.87137-5.962,4.41477a140.12636,140.12636,0,0,1,14.51494-7.09694c8.07375-2.77616,20.25747-5.85117,27.68827-6.5233,18.11158-1.30392,30.53.6021,47.07839,4.17479,47.78235,10.364,85.94194,40.00622,101.35414,82.16941a63.68757,63.68757,0,0,1,3.0661,31.75607c-3.81758,2.23989-7.90134,4.4725-12.39524,6.8504-21.8237,11.52214-39.38283,18.68767-63.8367,26.8292-15.89646,4.99086-31.78678,10.06731-47.91852,14.2511-16.39014,3.89631-33.04545,6.5493-49.54105,9.95613-24.90291,4.37913-45.61925,10.95024-68.51652,10.40639-6.02572-10.8109-9.45753-18.30548-13.01219-31.37388-8.3512-30.12924-8.20828-62.24232,7.47441-88.57517a136.74851,136.74851,0,0,1,41.62129-42.73662c9.67662-6.474,19.63213-9.31676,30.83239-12.28826-9.676,1.13858-19.47795,2.40155-28.47968,6.34423a124.18927,124.18927,0,0,0-53.77389,45.93889c-13.92318,22.78987-16.01113,50.47046-11.72363,76.45615-15.222,6.94623-27.62644,22.19841-14.67526,37.93977,8.85717,9.5682,21.1916,14.46518,33.86819,16.81738q1.72706,3.02106,3.57984,5.96675c6.85931,10.14236,16.36169,18.22215,26.66079,24.71883,9.30232,5.59531,18.95069,10.92966,29.47707,13.822,20.98315,5.55815,43.21228,3.7369,64.29024-.38782,18.53666-4.75344,36.14841-12.76136,52.69213-22.29321a230.53027,230.53027,0,0,0,47.11381-34.69819c16.73394-16.054,32.869-35.30347,37.70276-58.4013a103.6,103.6,0,0,0,10.14962-7.479c8.94768-7.7575,17.97009-16.473,21.99939-27.87748A29.4703,29.4703,0,0,0,779.60409,390.75043Zm-311.12,94.83225c-1.0492-4.88777-16.73965-5.51676-13.88629-9.49538,2.88857-4.66253,7.43919-8.43792,12.29245-11.65739q.90453,5.39711,2.15491,10.67873a155.077,155.077,0,0,0,11.66036,33.52153C468.61888,506.29527,471.39358,497.316,468.48412,485.58268Zm245.8909-1.89924c-18.01821,19.69316-33.61531,32.62068-55.13862,44.96648-15.04937,8.60111-24.2874,13.44065-38.98334,18.554-16.37991,5.88055-25.78973,6.60008-42.89388,7.56062-21.05912.462-33.51764-2.70634-51.30364-13.02724-11.40051-6.67145-19.31025-12.63124-25.86938-21.398,12.40815.225,24.72968-1.95271,36.87737-4.3045,25.44511-5.29,51.121-9.46122,76.51307-14.98221,14.57718-3.66114,28.873-8.3639,43.22375-12.81244a430.93718,430.93718,0,0,0,66.55531-27.03673c2.81383-1.49712,5.64221-2.98563,8.4587-4.49913C727.8772,466.149,721.84513,475.09922,714.375,483.68344Zm37.1091-80.10076c-4.99209,5.27128,2.72482,26.03079-2.37395,29.837.29752-18.91455-7.034-37.23109-17.24114-53.00357-.09214-.14845-.19268-.29025-.28544-.43819,7.38944-.75025,15.12554-.97835,21.40722.05662C780.5462,384.08605,764.37387,390.66242,751.48412,403.58268Z\" transform=\"translate(-418.34664 -284.63773)\"/><path d=\"M649.17031,372.49624c-2.68934-4.73706-7.96522-7.19328-12.78961-9.23659a36.68315,36.68315,0,0,0-22.05058-1.3973c-3.54422.65872,2.734-.02866,4.06657.12378a35.57065,35.57065,0,0,1,20.58469,6.90456c2.073,1.39986,6.047,4.69273,6.07363,8.31.07618,5.77888-2.51365,10.52986-6.24482,15.50854a60.37465,60.37465,0,0,1-12.05882,11.91293c-1.15485.76222-5.14484,3.38471-6.35252,3.73669-.40707.16392-.65626.27377-.7781.33284-.15254.06031-.30345.125-.457.183a61.71181,61.71181,0,0,1-14.6337,2.95481c-9.92337.57692-12.33423-.27806-19.98-4.3217-15.72651-7.53932-2.65576-26.02735,8.09464-36.25663,6.32549-6.48377,14.37508-10.03342,22.938-14.27414-8.36615,2.77135-17.088,5.12427-24.16228,10.62038-12.744,8.94624-29.94045,27.75226-16.7194,42.95612,9.29187,9.3489,22.73714,12.83487,35.54723,10.27965,15.34217-1.3716,28.0202-12.02309,35.59371-24.95543C649.92875,389.11244,653.04891,379.98785,649.17031,372.49624Z\" transform=\"translate(-418.34664 -284.63773)\"/><path d=\"M571.245,451.69159a21.91548,21.91548,0,0,0-16.788-4.14827,38.5325,38.5325,0,0,0-8.405,2.66241q.81054-.39114,1.61843-.77655c-5.4229,1.47418-11.00512,3.12333-15.4595,6.69314-7.21416,5.67026-12.02647,16.04308-7.40684,24.7564,2.04086,4.12851,5.97965,6.56435,10.24156,7.94035,12.18,4.36142,26.55717-1.59233,34.55742-11.19555C576.372,470.16569,578.92151,459.51686,571.245,451.69159Zm-1.9651,11.18879c-.53627,4.13649-12.17492-10.17466-16.79578-6.2977-2.62115,1.95332-5.25154,2.342-7,3-4.327,1.62171-2.9193,1.27407-7,1-1.9307-.1674-4.019,20.69553-6.075,19.49061-6.09-4.38405-5.13952-13.22013.07433-20.1681a27.90316,27.90316,0,0,1,8.75356-7.21078c.59237-.15542,1.18331-.31554,1.77712-.465,6.34536-1.568,13.2792-3.04675,19.43393-.034.66077.19842,4.24389,2.25453,4.8033,3.10972C568.87038,458.00562,569.59216,459.822,569.2799,462.88038Z\" transform=\"translate(-418.34664 -284.63773)\"/><path d=\"M614.79575,517.652a26.39352,26.39352,0,0,0-5.29923-1.47715c.98122.42836,1.94483.89409,2.9025,1.37273,6.79829,3.06886,4.24219,4.525.20163,8.17916-4.53424,3.76291-7.76149,7.128-14.09231,8.8197-4.3047,1.14585-9.85211-.01341-12.24434-4.06841-1.10878-2.20109-.35546-5.1988.77871-7.49694,1.4147-2.26,3.02234-.35256,5.25424-1.63478,4.10486-2.03215,7.41442-3.18322,11.87188-5.146-6.64554,1.58055-13.95492,2.15921-19.69869,6.1496-2.838,2.28913-4.2488,6.19588-4.31228,9.76846.42529,8.66562,10.92178,12.98087,18.44084,10.59918C605.57083,541.79981,626.74482,522.85823,614.79575,517.652Z\" transform=\"translate(-418.34664 -284.63773)\"/><path d=\"M725.15572,314.31373c-8.84407.2192-8.82113,13.17611,0,13.41926C734.00019,327.51379,733.97705,314.557,725.15572,314.31373Z\" transform=\"translate(-418.34664 -284.63773)\"/><path d=\"M574.49252,284.63773c-8.84407.2192-8.82093,13.176.00041,13.41926C583.337,297.83779,583.31406,284.88089,574.49252,284.63773Z\" transform=\"translate(-418.34664 -284.63773)\"/><path d=\"M443.23335,362.25191c-8.84406.2192-8.82113,13.1761,0,13.41926C452.07782,375.452,452.05469,362.49517,443.23335,362.25191Z\" transform=\"translate(-418.34664 -284.63773)\"/><path d=\"M548.24085,601.943c-8.84407.2191-8.82113,13.176,0,13.41926C557.08532,615.14307,557.06218,602.18617,548.24085,601.943Z\" transform=\"translate(-418.34664 -284.63773)\"/><path d=\"M725.15572,556.28751c-8.84407.2192-8.82113,13.17611,0,13.41926C734.00019,569.48758,733.97705,556.53077,725.15572,556.28751Z\" transform=\"translate(-418.34664 -284.63773)\"/><path d=\"M661.23794,409.04875c-8.84406.2192-8.82093,13.1761.00021,13.41926C670.08241,422.24881,670.05928,409.292,661.23794,409.04875Z\" transform=\"translate(-418.34664 -284.63773)\"/><path d=\"M498.01978,414.75566c-8.84406.2192-8.82113,13.1761.00021,13.41926C506.86426,427.95572,506.84132,414.99892,498.01978,414.75566Z\" transform=\"translate(-418.34664 -284.63773)\"/><path d=\"M424.97107,576.83248c-8.84406.2192-8.82113,13.1761.0002,13.41926C433.81554,590.03254,433.79261,577.07563,424.97107,576.83248Z\" transform=\"translate(-418.34664 -284.63773)\"/></svg>\r\n);\r\n\r\nexport default Logo;\r\n\r\n","import { Icon } from \"@chakra-ui/icon\";\r\nimport { Box, Flex, Text, HStack, Spacer } from \"@chakra-ui/layout\"\r\nimport { IconButton } from \"@chakra-ui/react\";\r\nimport Logo from \"./Logo\";\r\nimport { BiMenu } from \"react-icons/bi\";\r\nimport { useMediaQuery } from \"@chakra-ui/react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem\r\n} from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Navbar = () => {\r\n  const [isMobile, setMobile] = useState(false);\r\n  const [mediaQuery] = useMediaQuery(\"(max-width: 768px)\");\r\n\r\n  const nameList = [\r\n    {\r\n      id: 1,\r\n      name: \"FIND PETS\",\r\n      path: \"/Pet-planet/pets\"\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"ABOUT\",\r\n      path : \"/Pet-planet/about\"\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"CONTACT\",\r\n      path: \"/Pet-planet/contact\"\r\n    }\r\n  ];\r\n\r\n  const linkList = nameList.map(link => (\r\n    <Link key={link.id} to={link.path}>\r\n      {link.name}\r\n    </Link>\r\n  ));\r\n\r\n  useEffect(() => {\r\n    if(mediaQuery !== isMobile){\r\n      setMobile(mediaQuery);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [mediaQuery]); \r\n  \r\n  const MobileNav = () => {\r\n    return (\r\n      <Menu>\r\n        <MenuButton\r\n          as={IconButton}\r\n          aria-label=\"Options\"\r\n          icon={<BiMenu />}\r\n          variant=\"solid\"\r\n          size=\"lg\"\r\n          borderRadius=\"full\"\r\n          sx={{\r\n            \"background-color\": \"#133B5C\",\r\n            \"color\": \"#000000\",\r\n            \"&:hover\":{\r\n              \"color\": \"#ffffff\",\r\n              \"transition\" :\"0.2s all ease-in\"\r\n            }\r\n          }}\r\n        />\r\n        <MenuList fontSize=\"20px\" fontWeight=\"700\">\r\n          {linkList.map((item , index) => {\r\n            return (\r\n              <MenuItem key={index}>\r\n                {item}\r\n              </MenuItem>\r\n              )\r\n          })}\r\n        </MenuList>\r\n      </Menu>\r\n    )\r\n  };\r\n\r\n  const DesktopNav = () => {\r\n    return (\r\n      <HStack spacing={20} textAlign=\"center\" fontSize=\"20px\" fontWeight=\"700\" color=\"white\">\r\n        {linkList.map((item, index) => {\r\n          return (\r\n            <Box key={index} >\r\n              {item}\r\n            </Box>\r\n            )\r\n        })}\r\n      </HStack>\r\n    )\r\n  };\r\n\r\n  return (\r\n    <Flex width=\"100%\" justify=\"center\" py={4} sx={{\"background-color\":\"#133B5C\"}}>\r\n      <Flex w=\"5xl\" px={4}>\r\n        <Link to=\"/Pet-planet/\">\r\n          <HStack spacing={4}>\r\n            <Icon as={Logo} width=\"50\" height=\"50\"/>\r\n            <Text fontSize=\"2rem\" color=\"white\" sx={{\"font-family\": \"'Pacifico', cursive;\"}}>Pet Planet</Text>\r\n          </HStack>\r\n        </Link>\r\n        \r\n        <Spacer />\r\n\r\n        {isMobile ? <MobileNav /> : <DesktopNav />}\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n};\r\n\r\nexport default Navbar;","import Carousel from \"nuka-carousel\";\r\nimport { Image } from \"@chakra-ui/image\";\r\nimport NoImg from \"../../styles/no-photos.png\";\r\n\r\nconst ImageCarousel = (props) => {\r\n  if(props.photos.length === 0){\r\n    return (\r\n      <Carousel>\r\n        <Image src={NoImg} alt=\"No picture\" boxSize=\"300px\" fit=\"contain\" />\r\n      </Carousel>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <Carousel>\r\n      {props.photos.map((photo, index) => {\r\n        return <Image src={photo} alt={`Pic ${index}`} boxSize=\"300px\" fit=\"contain\"/>\r\n      })}\r\n    </Carousel>\r\n  )\r\n};\r\n\r\nexport default ImageCarousel;","import { Box, VStack, Text } from \"@chakra-ui/layout\";\r\nimport { Spinner } from \"@chakra-ui/react\";\r\nimport { Table, TableCaption, Tbody, Tr, Td } from \"@chakra-ui/table\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useAnimal } from \"../../hooks/useAnimal\";\r\nimport ImageCarousel from \"./ImageCarousel\";\r\n\r\nconst _ = require(\"lodash\");\r\n\r\nfunction upper(str){\r\n  return str.charAt(0).toUpperCase() + str.slice(1); \r\n}\r\n\r\nfunction photoPicker(photos, size){\r\n  const res = photos.reduce((prev, cur) => {\r\n    prev.push(cur[size]);\r\n    return prev;\r\n  },[]);\r\n\r\n  return res;\r\n}\r\n\r\n// function flattenObject(obj, parent ,res = {}){\r\n//   for (let key in obj){\r\n//     let fieldName = parent ? parent + '_' + key : key;\r\n    \r\n//     if(typeof obj[key] === 'object' && !Array.isArray(obj[key])){\r\n//       flattenObject(obj[key], fieldName, res);\r\n//     }else{\r\n//       res[fieldName] = obj[key];\r\n//     }\r\n//   }\r\n\r\n//   return res;\r\n// }\r\n\r\nconst PetDetails = () => {\r\n  const params = useParams();\r\n  const { data, isLoading } = useAnimal({}, `/animals/${params.id}`);\r\n  \r\n  \r\n  if(isLoading){\r\n    return (\r\n      <VStack spacing={10}>\r\n        <Spinner size=\"xl\"/>\r\n      </VStack>\r\n    );\r\n  }\r\n  \r\n  let pet = data.animal;\r\n\r\n  let details = _.pick(pet, ['type', 'age', 'gender', 'size']);\r\n  let fields = Object.keys(details);\r\n  let photos = photoPicker(pet.photos, \"medium\");\r\n\r\n  if(pet.breeds.mixed && pet.breeds.secondary){\r\n    details['breeds'] = pet.breeds.primary + \" - \" + pet.breeds.secondary;\r\n  }else{\r\n    details['breeds'] = pet.breeds.primary;\r\n  }\r\n  fields.push('breeds');\r\n\r\n\r\n  return (\r\n    <Box \r\n      p={10} \r\n      sx={{\"background-color\":\"#FDFAF6\"}}\r\n      borderRadius=\"20px\"\r\n      shadow=\"md\"\r\n      >\r\n      <VStack spacing={20}>\r\n        <Text w=\"full\" textAlign=\"center\" fontSize=\"4rem\" \r\n          sx={{\r\n            \"color\": \"#03506F\",\r\n            \"font-family\": \"'Fredoka One', cursive\"\r\n            }}\r\n        >\r\n          {pet.name}\r\n        </Text>\r\n        <ImageCarousel photos={photos}/>\r\n        <Table variant=\"striped\" colorScheme=\"blue\">\r\n          <TableCaption>Pet Details</TableCaption>\r\n          <Tbody>\r\n            {fields.map(field => (\r\n              <Tr>\r\n                <Td fontWeight=\"bold\">\r\n                  {upper(field)}\r\n                </Td>\r\n                <Td>\r\n                  {details[field]}\r\n                </Td>\r\n              </Tr>\r\n              ))\r\n            }\r\n          </Tbody>\r\n        </Table>\r\n      </VStack>\r\n    </Box>\r\n  )\r\n};\r\n\r\nexport default PetDetails;","import { Container } from \"@chakra-ui/layout\";\r\nimport PetDetails from \"../components/Details/PetDetails\";\r\n\r\nconst Details = () => {\r\n  return (\r\n    <Container my={20} maxW=\"container.lg\">\r\n      <PetDetails />\r\n    </Container>\r\n  )\r\n};\r\n\r\nexport default Details;","import { createContext, useState, useContext } from \"react\";\r\n\r\nconst FetchOptionsContext = createContext();\r\n\r\nfunction FetchOptionsProvider({children}){\r\n  const [options, setOptions] = useState({\r\n    params:{\r\n      limit: 9,\r\n      page: 1\r\n    },\r\n    path: \"/animals\",\r\n  });\r\n\r\n\r\n  return (\r\n    <FetchOptionsContext.Provider value={{options, setOptions}}>\r\n      {children}\r\n    </FetchOptionsContext.Provider>\r\n  )\r\n}\r\n\r\nfunction useFetchOptions(){\r\n  const context = useContext(FetchOptionsContext)\r\n\r\n  if(context === undefined){\r\n    console.log(\"useFetchOptions must be used within a Provider\");\r\n  }\r\n\r\n  return context;\r\n}\r\n\r\nexport { FetchOptionsProvider, useFetchOptions };","import { FormLabel } from \"@chakra-ui/form-control\";\r\nimport { VStack } from \"@chakra-ui/layout\";\r\nimport { Select } from \"@chakra-ui/select\"\r\n\r\nfunction upper(str){\r\n  return str.charAt(0).toUpperCase() + str.slice(1); \r\n}\r\n\r\nconst Field = ({register, name, options, ...rest}) => {\r\n  return (\r\n    <VStack>\r\n      <FormLabel htmlFor={name}>{upper(name)}</FormLabel>\r\n      <Select {...register(name)} {...rest} id={name}>\r\n        {\r\n          options.map((opt, index) => (\r\n            index === 0 ?\r\n            <option value={opt.toLowerCase()} selected>{opt}</option>\r\n            : <option value={opt.toLowerCase()}>{opt}</option>\r\n          ))\r\n        }\r\n      </Select>\r\n    </VStack>\r\n  )\r\n};\r\n\r\nexport default Field;","import { Button } from \"@chakra-ui/button\";\r\nimport { Text, SimpleGrid, VStack, Flex } from \"@chakra-ui/layout\";\r\nimport { useForm, useWatch } from \"react-hook-form\";\r\nimport { useFetchOptions } from \"../../context/FetchOptionsContext\";\r\nimport { useAnimal } from \"../../hooks/useAnimal\";\r\nimport Field from \"./Field\";\r\n\r\nconst types = [\"Dog\",\"Cat\",\"Rabbit\",\"Small & Furry\",\"Horse\",\"Bird\",\"Scales, Fins & Other\",\"Barnyard\"];\r\n\r\nfunction getNames(breeds){\r\n  let res = breeds.reduce((prev, cur) => {\r\n    prev.push(cur.name);\r\n    return prev;\r\n  },[]);\r\n\r\n  return res;\r\n}\r\n\r\nconst Selector = () => {\r\n  // Form control\r\n  const { register, control, handleSubmit } = useForm();\r\n  const { setOptions } = useFetchOptions();\r\n\r\n  const type = useWatch({\r\n    control,\r\n    name:\"type\",\r\n    defaultValue: \"dog\"\r\n  });\r\n\r\n  const breedsPath = `/types/${type}/breeds`;\r\n  const { data, isLoading: loading_breeds } = useAnimal({}, breedsPath);\r\n\r\n  function onSubmit(data){\r\n    setOptions({\r\n      params:{...data, limit: 9, page: 1},\r\n      path: \"/animals\"\r\n    });\r\n  }\r\n\r\n  \r\n  return (\r\n    <Flex spacing={10} width=\"full\" direction=\"column\">\r\n      <Text fontSize=\"3rem\" as=\"u\" width=\"full\" textAlign=\"center\" marginBottom={10}>\r\n        Find pets\r\n      </Text>\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)} width=\"full\">\r\n        <VStack spacing={10} width=\"full\" marginBottom={10}>\r\n          <SimpleGrid columns={{base: 1, md: 3}} width=\"full\" spacing={10}>\r\n            <Field \r\n              id=\"type\" \r\n              options={types} \r\n              register={register} \r\n              name=\"type\"\r\n            />\r\n            \r\n            <Field \r\n              name=\"breed\" \r\n              isDisabled={loading_breeds} \r\n              register={register} \r\n              options={data ? getNames(data.breeds) : []}\r\n              defaultValue=\"\"\r\n            />\r\n\r\n            <Field \r\n              options={['Male', 'Female']} \r\n              name=\"gender\" \r\n              register={register} \r\n            />\r\n          </SimpleGrid>\r\n\r\n          <Button type=\"submit\" size=\"lg\" colorScheme=\"blue\">\r\n            Search\r\n          </Button>\r\n        </VStack>\r\n      </form>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default Selector;","import { Button } from \"@chakra-ui/button\";\r\nimport { Flex, HStack } from \"@chakra-ui/layout\";\r\n\r\nconst MyButton = (props) => {\r\n  return (\r\n    <Button size=\"lg\" colorScheme=\"teal\" w={32} onClick={() => props.onClick(props.offset)}>\r\n      {props.text}\r\n    </Button>\r\n  )\r\n};\r\n\r\nconst Pagination = ({totalPages, currentPage, setPage}) => {\r\n\r\n  return (\r\n    <Flex direction=\"row\" justify=\"center\" w=\"100%\" mt={12}>\r\n      <HStack spacing={10}>\r\n        {currentPage === 1 ? null : <MyButton text=\"Previous\" onClick={setPage} offset={-1}/>}\r\n        {currentPage === totalPages? null: <MyButton text=\"Next\" onClick={setPage} offset={1}/>}\r\n      </HStack>\r\n    </Flex>\r\n  )\r\n};\r\n\r\nexport default Pagination;","import { SimpleGrid } from \"@chakra-ui/layout\";\r\nimport { useFetchOptions } from \"../../context/FetchOptionsContext\";\r\nimport { useAnimal } from \"../../hooks/useAnimal\";\r\nimport Card from \"../Card\";\r\nimport { useEffect } from \"react\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nconst Result = () => {\r\n  const { options, setOptions } = useFetchOptions();\r\n  const { data, isLoading, setParams } = useAnimal(options.params, options.path)\r\n\r\n  const setPage = (offset) => {\r\n    setOptions({\r\n      ...options,\r\n      params:{\r\n        ...options.params,\r\n        page: options.params.page + offset\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    setParams(options.params)\r\n    //eslint-disable-next-line\r\n  }, [options])\r\n\r\n  if(isLoading){\r\n    return <div>Loading ...</div>\r\n  }\r\n\r\n  let petList = data.animals;\r\n  let {current_page, total_pages} = data.pagination;\r\n\r\n  return (\r\n    <>\r\n      <SimpleGrid \r\n        columns={{base: 1, sm: 2, md: 3}} \r\n        spacing={8}\r\n        justifyItems=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        {\r\n          petList.map(pet => (\r\n            <Card key={pet.id} pet={pet}/>\r\n          ))\r\n        }\r\n      </SimpleGrid>\r\n      <Pagination totalPages={total_pages} currentPage={current_page} setPage={setPage}/>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Result;","import Selector from \"./Selector\"\r\nimport Result from \"./Result\";\r\nimport { FetchOptionsProvider } from \"../../context/FetchOptionsContext\";\r\n\r\nconst SearchPage = () => {\r\n  return(\r\n    <FetchOptionsProvider>\r\n      <Selector />\r\n      <Result />\r\n    </FetchOptionsProvider> \r\n  )\r\n};\r\n\r\nexport default SearchPage;","import { Container } from \"@chakra-ui/layout\"\r\nimport SearchPage from \"../components/Selection/SearchPage\";\r\n\r\nconst Pets = () => {\r\n  \r\n  return (\r\n    <Container my={20} maxW=\"container.lg\">\r\n      <SearchPage />\r\n    </Container>\r\n  )\r\n};\r\n\r\nexport default Pets;","import React from 'react';\nimport {\n  Routes,\n  Route\n} from \"react-router-dom\";\nimport About from './pages/About';\nimport Contact from './pages/Contact';\nimport Main from './pages/Main';\nimport Navbar from \"./components/Navbar\";\nimport Details from './pages/Details';\nimport Pets from './pages/Pets';\n\nconst App = () => {\n\n  return(\n    <div>\n      <Navbar />\n      <Routes>\n        <Route path=\"/Pet-planet/about\" element={<About />}/>\n\n        <Route path=\"/Pet-planet/contact\" element={<Contact />}/>\n\n        <Route path=\"/Pet-planet/pets/:id\" element={<Details />}/>\n\n        <Route path=\"/Pet-planet/pets\" element={<Pets />}/>\n        \n        <Route path=\"/Pet-planet/\" element={<Main />}/>\n      </Routes>\n    </div>\n  )\n};\n\nexport default App;\n","import { extendTheme } from \"@chakra-ui/react\";\r\n\r\nconst theme = extendTheme({\r\n  fonts:{\r\n    body: \"Noto Sans\"\r\n  }\r\n});\r\n\r\nexport default theme;","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport { AccessTokenProvider } from './context/AccessTokenContext';\nimport App from './App';\nimport \"./styles/style.css\";\nimport theme from './styles/theme';\n\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n  <ChakraProvider theme={theme}>\n    <AccessTokenProvider>\n      <StrictMode>\n        <Router>\n          <App />\n        </Router>\n      </StrictMode>\n    </AccessTokenProvider>\n  </ChakraProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}